"""
Домашняя работа.
1. Задача.
Реализовать простое средство для считывания и записи информации из конфигурационных
файлов.
Изначально используется один формат конф. файлов, но система растет и требует
поддержки большого числа форматов.
Вам нужно подумать, как решить эту задачу используя функциональный подход (в
принципе я уже сказал про две функции, осталось подумать об их реализации).
Вам нужно подумать, как решить эту задачу используя объектно-ориентированный подход.
Какие классы вы бы создали, чтобы можно было легко и просто добавлять новые форматы,
не изменяя код системы.
Механизмы чтения и записи опускаем. Свое решение можно оформить в виде псевдокода,
или кода с принтами, или вообще в виде алгоритма на бумажке.
"""
# Функциональный подход

def read_config_txt(source):
    """функция для чтения конфигурации из файла"""
    params = {}
    """Читаем текстовые параметры из source"""
    return params


def write_config_txt(source, params):
    """функция для записи конфигурации в файла"""
    '''Пишем в source params'''


f = './params.txt'

params = {
    'keys1': 'val1',
    'keys2': 'val2',
    'keys3': 'val3'
}

def read_config_picle(source):
    """функция для чтения конфигурации из файла"""
    params = {}
    """Читаем текстовые параметры из source"""
    return params


def write_config_picle(source, params):
    """функция для записи конфигурации в файла"""
    '''Пишем в source params'''

#Вся работа производится через менеджер контекста
"""
Для новых форматов нужно использовать новые функции
"""

# ООП подход

class ConfigFile(object):
    def __init__(self, source, params):
        """Конструктор"""
        self.params = params
        self.source = source


    def get_config():
        '''getter для отправки данных из файла'''

    def set_config():
        '''setter для получения данных в файл'''

"""
Для новых форматов можно использовать наследование
"""
class ConfigPicke(ConfigFile):
    def __init__(self, source, params, format_f):
        super().__init__(self, source, params)
self.format_f = format_f
